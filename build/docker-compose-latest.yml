version: "3.2"
services:
  onos-config:
    image: onosproject/onos-config:latest
    hostname: onos-config
    ports:
      - "15150:5150" #Only needed to for attaching for debug
    volumes:
      - type: bind
        source: ~/go/src/github.com/onosproject/onos-config/configs
        target: /etc/onos-config/
      - type: bind
        source: ~/go/src/github.com/onosproject/onos-config/pkg/northbound/testdata
        target: /etc/certs/
    command: -configStore=/etc/onos-config/configStore-sample.json -changeStore=/etc/onos-config/changeStore-sample.json -deviceStore=/etc/onos-config/deviceStore-sample.json -networkStore=/etc/onos-config/networkStore-sample.json -modelPlugin=/usr/local/lib/testdevice.so.1.0.0 -modelPlugin=/usr/local/lib/testdevice.so.2.0.0 -modelPlugin=/usr/local/lib/devicesim.so.1.0.0 -certPath=/etc/certs/onos-config.crt -keyPath=/etc/certs/onos-config.key
#  onos-topo:
#    image: onosproject/onos-topo:latest
#    hostname: onos-topo
#    ports:
#      - "25150:5150"
  onos-config-envoy:
    hostname: onos-config-envoy
    ports:
      - "18080:8080" #Only needed for 'ng serve' development mode
    image: envoyproxy/envoy-alpine:latest
    volumes:
      - type: bind
        source: ./envoy-proxy
        target: /etc/envoy-proxy/
    command: /usr/local/bin/envoy -c /etc/envoy-proxy/envoy-config.yaml
  onos-topo-envoy:
    hostname: onos-topo-envoy
    ports:
      - "28080:8080" #Only needed for 'ng serve' development mode
    image: envoyproxy/envoy-alpine:latest
    volumes:
      - type: bind
        source: ./envoy-proxy
        target: /etc/envoy-proxy/
    command: /usr/local/bin/envoy -c /etc/envoy-proxy/envoy-topo.yaml
  onos-gui:
    image: onosproject/onos-gui:latest
    hostname: onos-gui
    ports:
      - "80:80" #Make sure to add 'onos-gui' to your /etc/hosts at 127.0.0.1 and access with http://onos-gui/index.html
    labels:
      description: "ONOS GUI"